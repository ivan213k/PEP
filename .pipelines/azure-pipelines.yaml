trigger:
  branches:
    include:
    - master

pr:
  branches:
    include:
    - master

stages:
  - stage: build_and_test
    displayName: Build and Test

    jobs:
      - job: Build
        displayName: Build
        pool: Default
        variables:
        - group: telegram

        steps:
          - checkout: self

          - task: DotNetCoreCLI@2
            displayName: Restore
            inputs:
              command: "restore"
              projects: "**/*.sln"

          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              command: "publish"
              projects: |
               $(System.DefaultWorkingDirectory)/PerfomanceEvaluationPlatform/PerfomanceEvaluationPlatform.csproj
              versioningScheme: byEnvVar
              versionEnvVar: GitVersion.SemVer
              arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration Release
              modifyOutputPath: false
              zipAfterPublish: false
              publishWebProjects: true

          - task: ArchiveFiles@2
            displayName: 'Archive files'
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/publish_output'
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true

          - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            artifact: drop

          - task: SendTelegramNotification@0.1.0
            displayName: Send notification
            condition: failed()
            inputs:
              botToken: $(botToken)
              chats: $(chatsToNotify)
              message: Failed on branch <b>$(Build.SourceBranchName)</b> and commit <i>$(Build.SourceVersionMessage)</i>
              buildNumber: true
              buildQueuedBy: true
              releaseName: true

  - stage: deploy_to_qassss
    displayName: Deploy to QA
    dependsOn: build_and_test
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

    jobs:
      - deployment: DeployToQA
        displayName: Deploy to QA
        environment: qa
        pool: default
        strategy:
          runOnce:
            deploy:
              steps:
              - checkout: self
              - download: current
                artifact: drop
              - task: AzureWebApp@1
                inputs:
                  azureSubscription: PayAsYouGo
                  appName: pepWebAppQa
                  package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
